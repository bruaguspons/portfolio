---
interface Props {
    href: string;
    className?: string;
}

const { href, className } = Astro.props;

const { url } = Astro.request;

const isCurrentLink = url.includes(href);

const defaultColor = isCurrentLink ? "text-transparent" : "text-neutral-200";
const activeBg = isCurrentLink
    ? ""
    : "active:bg-background-500 cursor-pointer ";
---

{
    isCurrentLink ? (
        <div
            class={`w-full h-full sm:max-w-min ${activeBg}  sm:hover:bg-transparent `}
        >
            <span
                class={`font-bold ${defaultColor} bg-clip-text bg-gradient-to-r  from-purple-500 to-blue-500 active:from-purple-500 active:to-blue-500 active:text-transparent transition duration-150

                sm:hover:from-purple-500 sm:hover:to-blue-500 sm:hover:text-transparent

                w-full h-full flex justify-center items-center sm:w-auto
                
                
                `}
            >
                <slot />
            </span>
        </div>
    ) : (
        <div
            class={`w-full h-full sm:max-w-min ${activeBg} sm:hover:bg-transparent `}
        >
            <a
                href={href}
                class={`font-bold ${defaultColor} bg-clip-text bg-gradient-to-r  from-purple-500 to-blue-500 active:from-purple-500 active:to-blue-500 active:text-transparent transition duration-150
                
                sm:hover:from-purple-500 sm:hover:to-blue-500 sm:hover:text-transparent 

                w-full h-full flex justify-center items-center sm:w-auto

                ${className}
                `}
            >
                <slot />
            </a>
        </div>
    )
}
