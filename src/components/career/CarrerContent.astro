---
import TextColor from "@/components/TextColor.astro";
import { getI18N, getLangFromUrl } from "@/i18n";

interface Props {
    slug: string;
}

const { slug } = Astro.props;

// const { currentLocale } = Astro;

const url = Astro.request.url;
const currentLocale = getLangFromUrl(new URL(url));

const i18n = getI18N({ currentLocale });
const baseUrl = url.replace(/(es|en)(.*)$/, "");

const [item] = i18n.CAREER.ITEMS.filter((item) => item.SLUG === slug);
---

{
    item && (
        <section class="flex h-full w-full items-center md:items-start lg:items-center justify-center pt-0 md:pt-20 lg:pt-0">
            <div class="flex flex-col-reverse items-center lg:flex-row w-full lg:max-w-[980px] mx-10">
                <div class="flex flex-1 flex-col items-center lg:items-start">
                    <p class="flex flex-col lg:flex-row gap-4 lg:items-end my-4 text-center lg:text-left">
                        <TextColor className="text-2xl sm:text-2xl font-extrabold">
                            {item.TITLE}
                        </TextColor>
                        <span class="font-semibold text-lg">{item.DATE}</span>
                    </p>
                    {item.CONTENT.map((content) => (
                        <p class="text-zinc-700 dark:text-zinc-300 text-base text-wrap max-w-[980px] mb-5">
                            {content}
                        </p>
                    ))}
                </div>
                <div class="w-60 h-60 flex justify-center mx-5">
                    <img
                        class="h-full w-full rounded-xl"
                        src={baseUrl + item.IMAGE_SRC}
                        alt={baseUrl + item.TITLE}
                    />
                </div>
            </div>
        </section>
    )
}
