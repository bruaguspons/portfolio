---
import IconsBgGradient from "./IconsBgGradient.astro";

interface Props {
    gradientName: string;
    desc?: string;
    href?: string;
    target?: string;
    className?: string;
    from_color?: string;
    to_color?: string;
}

const { gradientName, desc, href, target, className, from_color, to_color } =
    Astro.props;
---

<IconsBgGradient className={className} desc={desc} href={href} target={target}>
    <svg
        stroke="currentColor"
        fill="currentColor"
        stroke-width="0"
        viewBox="0 0 1024 1024"
        xmlns="http://www.w3.org/2000/svg"
        class={`gradient-bg-${gradientName} ${className}`}
    >
        <defs>
            <linearGradient id={gradientName}>
                <stop offset="5%" stop-color={from_color}></stop>
                <stop offset="95%" stop-color={to_color}></stop>
            </linearGradient>
        </defs>
        <path
            d="M928 160H96c-17.7 0-32 14.3-32 32v640c0 17.7 14.3 32 32 32h832c17.7 0 32-14.3 32-32V192c0-17.7-14.3-32-32-32zm-40 110.8V792H136V270.8l-27.6-21.5 39.3-50.5 42.8 33.3h643.1l42.8-33.3 39.3 50.5-27.7 21.5zM833.6 232L512 482 190.4 232l-42.8-33.3-39.3 50.5 27.6 21.5 341.6 265.6a55.99 55.99 0 0 0 68.7 0L888 270.8l27.6-21.5-39.3-50.5-42.7 33.2z"
        ></path></svg
    >
</IconsBgGradient>

<script define:vars={{ gradientName }}>
    document
        .querySelectorAll(`.gradient-bg-${gradientName}`)
        .forEach((elem) => {
            elem.closest("a").addEventListener("mouseenter", () => {
                const paths = elem.querySelectorAll("path");
                if (paths.length)
                    paths.forEach(
                        (path) => (path.style.fill = `url(#${gradientName})`),
                    );
            });
            elem.closest("a").addEventListener("mouseleave", () => {
                const paths = elem.querySelectorAll("path");
                if (paths)
                    paths.forEach((path) => (path.style.fill = `currentColor`));
            });
        });
</script>
